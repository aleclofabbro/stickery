{"version":3,"sources":["lib/Actions/provideDispatcher.tsx","lib/Actions/index.ts","srv/mock/imageData.ts","srv/project/index.ts","srv/db/index.ts","srv/images/lib.ts","srv/images/reducer.ts","ui/templates/Main/Main.tsx","srv/images/index.ts","srv/index.tsx","lib/hook/useServices.ts","ui/elements/button/Button.tsx","ui/modules/Gallery/Gallery.tsx","ui/modules/Gallery/GalleryCtrl.tsx","lib/hook/useFileChooser.tsx","ui/Views/NewProject/NewProjectView.tsx","lib/hook/useBoolState.ts","ui/Views/NewProject/NewProjectViewCtrl.tsx","lib/hook/useTransforms.tsx","ui/Views/Project/ProjectView.tsx","ui/Views/Project/ProjectViewCtrl.tsx","ui/templates/Main/MainCtrl.tsx","index.tsx"],"names":["DispatcherCtx","createContext","dispatch","action","consumable","consumed","console","warn","Error","deferred","resolve","notConsumedResponse","handled","useDispatcher","useContext","ProvideMiddleware","mw","children","parentDispatcher","providerDispatch","useMemo","prosecution","Provider","value","actionCtx","type","_commandCtx","undefined","symbol","Symbol","create","payload_or_dispatch","payload","reject","response","Promise","is","_","_is","do","handler","consume","a","async","error","resp","useActionCustDispatch","useCallback","useActionDispatch","mockImageFileMeta","partImageMeta","lastModified","name","src","width","height","cmd_prj_set_background","cmd_prj_add_object","cmd_prj_new_project","initialState","background","Math","ceil","random","objects","image","reducer","prev","useProjectWorkbench","useReducer","state","StickeryDB","projects","imageData","imageMeta","version","stores","table","Dexie","StickeryDBCtx","createImageSrcUrl","id","getImageSrcUrl","toString","substr","getImageFileData","file","size","arrayBuffer","blob","imgData","getImageFileMeta","url","URL","createObjectURL","img","Image","onload","imgMeta","MainView","cmd_int_set_images","cmd_int_add_image_meta","initState","images","cmd_imagedb_import_image_file","useImages","reduce","db","addImagesMeta","all","add","then","importImageFile","useEffect","toArray","useCreateStickeryServices","srvcs","project","imageDB","keys","Object","red","key","_dispatch","StickeryServicesCtx","ProvideStickeryServices","useStickeryState","Button","props","Gallery","GalleryItems","openFileChooser","style","templateStyle","headStyle","onClick","galleryContainerStyle","map","Item","GalleryItem","clickImage","imageDivStyle","imageStyle","alt","maxWidth","borderColor","borderWidth","padding","margin","display","gridTemplate","position","top","bottom","gridArea","overflowY","overflowX","GalleryCtrl","onFileChoosen","inputRef","useRef","current","click","input","document","createElement","setAttribute","changeListener","files","length","addEventListener","body","appendChild","removeEventListener","removeChild","pasteListener","pasteEv","data","clipboardData","dropListener","dragEv","dataTransfer","useFileChooser","GalleryItemCtrl","NewProjectView","GalleryComp","formik","initial","useState","setState","toFalse","toTrue","toggle","b","T","F","t","s","useBoolState","showGallery","openGallery","closeGallery","onChange","handleChange","values","done","isValid","submitForm","errors","NewProjectViewCtrl","newProject","setBg","useFormik","initialValues","onSubmit","setBackground","isSubmitting","Main","outerStyle","view","Project","ProjectComp","NewProject","NewProjectComp","left","right","overflow","___REMOVE___THIS__SEMAPHORE__","TransformCtx","transform","pos","x","y","scale","useTransform","elemRef","parentTranform","setScale","scaleRef","setPos","posRef","mc","setMc","transformStyle","setup","Hammer","Pinch","event","on","ev","basePos","baseSize","pinch","pinchend","off","setTimeout","Pan","interval","pan","deltaX","deltaY","panend","_mc","Manager","domEvents","destroy","transformCtx","ProjectView","Objects","bgRef","dimensions","useFitInWindowDim","containerStyle","_containerStyle","backgroundImage","ref","Obj","backgroundRepeat","backgroundSize","dim","fitInWindowDim","clientDim","window","innerHeight","innerWidth","ratio","fitRatio","result","targetDim","min","ProjectViewCtrl","obj","PrjObj","objRef","fitDim","MainCtrl","ReactDOM","render","getElementById","navigator","serviceWorker","register"],"mappings":"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","file":"static/js/main.bb4076aa.chunk.js","sourcesContent":["import React, { createContext, FC, useContext, useMemo } from 'react'\nimport { Action, Dispatch } from '.'\n\nexport interface DispatcherCtx {\n  dispatch: Dispatch<any, any>\n}\nexport type Middleware = (\n  action: Action<any>,\n  dispatch: Dispatch<any, any>\n) => Action<any> | undefined\nexport interface ProvideMiddleware {\n  mw: Middleware\n}\n\nexport const DispatcherCtx = createContext<DispatcherCtx>({\n  dispatch: (action) => {\n    // console.log('DispatcherCtx', action)\n    if (action.consumable && !action.consumed) {\n      console.warn(action, new Error(`Command not consumed`))\n      action.deferred.resolve(action.notConsumedResponse)\n    } else if (!action.handled) {\n      console.warn(action, new Error('Action not handled'))\n      action.deferred.resolve(action.notConsumedResponse)\n    }\n  }\n})\n\nexport const useDispatcher = () => {\n  return useContext(DispatcherCtx)\n}\n\nexport const useMWProvider = (mw: Middleware): FC =>\n  useMemo(() => ({ children }) => <ProvideMiddleware mw={mw}>{children}</ProvideMiddleware>, [mw])\n\nexport const ProvideMiddleware: FC<ProvideMiddleware> = ({ mw, children }) => {\n  const parentDispatcher = useDispatcher()\n  const providerDispatch = useMemo<DispatcherCtx>(() => {\n    return {\n      dispatch: (action) => {\n        const prosecution = mw(action, parentDispatcher.dispatch)\n        prosecution && parentDispatcher.dispatch(prosecution)\n      }\n    }\n  }, [mw, parentDispatcher])\n  return <DispatcherCtx.Provider value={providerDispatch}>{children}</DispatcherCtx.Provider>\n}\n","import { useCallback } from 'react'\nimport { useDispatcher } from './provideDispatcher'\n\nexport interface Action<P, R = void> {\n  readonly payload: P\n  readonly type: string\n  readonly symbol: Symbol\n  readonly handled: boolean\n  readonly consumed: boolean\n  readonly response: Promise<R>\n  readonly deferred: { resolve(resp: R): void; reject(err: any): void }\n  readonly notConsumedResponse: R\n  readonly consumable: boolean\n}\nexport type Dispatch<P, R> = (_: Action<P, R>) => unknown\ninterface ActionCtx<P, R = void> {\n  (dispatch: Dispatch<P, R>): (payload: P) => Action<P, R>\n  (payload: P): Action<P, R>\n  do<T>(a: any, h: (_: P) => T): T | void\n  is(a: any): a is Action<P, R>\n  consume(a: any, h: (_: P) => R | Promise<R>): void\n}\nexport const isDispatch = <P, R>(_: any): _ is Dispatch<P, R> => 'function' === typeof _\nexport const actionCtx = <P>(type: string): ActionCtx<P> => _commandCtx(type, undefined, false)\nexport const commandCtx = <P, R = void>(type: string, notConsumedResponse: R): ActionCtx<P, R> =>\n  _commandCtx(type, notConsumedResponse, true)\nexport const _commandCtx = <P, R = void>(\n  type: string,\n  notConsumedResponse: R,\n  consumable: boolean\n): ActionCtx<P, R> => {\n  const symbol = Symbol(`${type}`)\n\n  const create = ((payload_or_dispatch: Dispatch<P, R> | P) => {\n    if (isDispatch<P, R>(payload_or_dispatch)) {\n      const dispatch = payload_or_dispatch\n      return (payload: P) => {\n        const action = create(payload)\n        dispatch(action)\n        return action\n      }\n    }\n\n    const payload = payload_or_dispatch\n\n    const deferred: { resolve(resp: R): void; reject(err: any): void } = {\n      resolve: () => {},\n      reject: () => {}\n    }\n    const response = new Promise<R>((resolve, reject) => {\n      deferred.reject = reject\n      deferred.resolve = resolve\n    })\n\n    const newAction: Action<P, R> = {\n      type,\n      payload,\n      symbol,\n      handled: false,\n      consumed: false,\n      response,\n      deferred,\n      notConsumedResponse,\n      consumable\n    }\n    return newAction\n  }) as ActionCtx<P, R>\n\n  const _is = (_: any): _ is Action<P, R> => !!_ && 'symbol' in _ && _.symbol === symbol\n  const is = (_: any): _ is Action<P, R> =>\n    _is(_)\n      ? /**/\n        //@ts-ignore\n        (_.handled = true)\n      : false\n  create.is = is\n\n  const _do: ActionCtx<P, R>['do'] = (_: Action<any, any>, handler) => {\n    if (is(_)) {\n      //@ts-ignore\n      _.handled = true\n      return handler(_.payload)\n    }\n  }\n  create.do = _do\n\n  const consume: ActionCtx<P, R>['consume'] = async (_: Action<any, any>, handler) => {\n    if (consumable && is(_)) {\n      if (_.consumed) {\n        console.error(_, new Error(`Action already consumed!`))\n        return\n      }\n      //@ts-ignore\n      _.consumed = true\n      //@ts-ignore\n      _.handled = true\n      const resp = await Promise.resolve(handler(_.payload))\n      _.deferred.resolve(resp)\n    }\n  }\n  create.consume = consume\n\n  return create\n}\n\nexport const useActionCustDispatch = <P, R>(\n  actionCtx: ActionCtx<P, R>,\n  dispatch: Dispatch<P, R>\n) => {\n  return useCallback(\n    (payload: P) => {\n      return actionCtx(dispatch)(payload)\n    },\n    [dispatch, actionCtx]\n  )\n}\nexport const useActionDispatch = <P, R>(actionCtx: ActionCtx<P, R>) => {\n  const { dispatch } = useDispatcher()\n  return useActionCustDispatch(actionCtx, dispatch)\n}\n","import { Dimensions, ImageFileMeta } from 'srv/@types/data'\n\nexport const mockImageFileMeta = (\n  partImageMeta: Partial<ImageFileMeta> & Dimensions,\n  type = 'jpg'\n): ImageFileMeta => ({\n  ...partImageMeta,\n  lastModified: 1111,\n  name: 'noname',\n  src: `https://picsum.photos/${partImageMeta.width}/${partImageMeta.height}.${type}`,\n  type\n})\n","import { actionCtx } from 'lib/Actions'\nimport { Reducer, useMemo, useReducer } from 'react'\nimport { ProjectData, ImageFileMeta, ProjectObject } from 'srv/@types/data'\nimport { mockImageFileMeta } from 'srv/mock/imageData'\n\nexport interface ProjectWorkbench extends ProjectData {}\nexport type ProjectWorkbenchState = ProjectWorkbench | null\n\nexport type PrjReducer = Reducer<ProjectWorkbenchState | null, any>\n\nconst cmd_prj_set_background = actionCtx<ImageFileMeta>('cmd_prj_set_background')\nconst cmd_prj_add_object = actionCtx<ProjectObject>('cmd_prj_add_object')\n\nexport const cmd_prj_new_project = actionCtx<Pick<ProjectData, 'name' | 'background'>>(\n  'cmd_prj_new_project'\n)\n\n// const initialState: ProjectWorkbenchState = null\nconst initialState: ProjectWorkbenchState = {\n  background: mockImageFileMeta({\n    width: Math.ceil(Math.random() * 1000 + 200),\n    height: Math.ceil(Math.random() * 1000 + 200)\n  }),\n  name: '',\n  objects: [\n    {\n      image: mockImageFileMeta({\n        width: Math.ceil(Math.random() * 200 + 200),\n        height: Math.ceil(Math.random() * 200 + 200)\n      })\n    }\n  ]\n}\nexport const reducer: PrjReducer = (prev, action) => {\n  if (cmd_prj_new_project.is(action)) {\n    return {\n      ...action.payload,\n      objects: []\n    }\n  }\n  if (prev) {\n    if (cmd_prj_set_background.is(action)) {\n      return {\n        ...prev,\n        background: action.payload\n      }\n    }\n    if (cmd_prj_add_object.is(action)) {\n      return {\n        ...prev,\n        objects: [...prev.objects, action.payload]\n      }\n    }\n  }\n  return prev\n}\n\nexport const useProjectWorkbench = () => {\n  const [state, dispatch] = useReducer<PrjReducer>(reducer, initialState)\n\n  return useMemo(\n    () => ({\n      state,\n      dispatch\n    }),\n    [dispatch, state]\n  )\n}\n","import Dexie from 'dexie'\nimport { createContext, useContext } from 'react'\nimport { ImageFileData, ImageFileMeta, ProjectData } from 'srv/@types/data'\n\nexport class StickeryDB extends Dexie {\n  projects: Dexie.Table<ProjectData, number>\n  imageData: Dexie.Table<ImageFileData, string>\n  imageMeta: Dexie.Table<ImageFileMeta, string>\n  constructor() {\n    super('Stickery')\n    this.version(1).stores({\n      imageData: 'src, blob',\n      imageMeta: 'src, name, type, size, lastModified',\n      projects: '++id, name, background, objects'\n    })\n    this.imageData = this.table('imageData')\n    this.imageMeta = this.table('imageMeta')\n    this.projects = this.table('projects')\n  }\n}\n\nexport const StickeryDBCtx = createContext(new StickeryDB())\nexport const useStickeryDB = () => useContext(StickeryDBCtx)\n","import { ImageFileData, ImageFileMeta } from 'srv/@types/data'\nimport { StickeryDB } from 'srv/db'\n\nexport const createId = () =>\n  Math.random()\n    .toString(36)\n    .substr(2, 9)\n\nexport const getImageSrcUrl = (name: string, id: string) => `/_/images/${id}/${name}`\nexport const createImageSrcUrl = (name: string) => getImageSrcUrl(name, createId())\n\nexport async function getImageFileData(file: File, src: string): Promise<ImageFileData> {\n  const { size } = file\n  // @ts-ignore\n  const blob: Blob = await file.arrayBuffer()\n  const imgData: ImageFileData = {\n    blob,\n    src,\n    size\n  }\n  return imgData\n}\n\nexport async function getImageFileMeta(file: File, src: string): Promise<ImageFileMeta> {\n  return new Promise((resolve, reject) => {\n    const { name, lastModified, type } = file\n    var url = URL.createObjectURL(file)\n    var img = new Image()\n\n    img.onload = () => {\n      const imgMeta: ImageFileMeta = {\n        height: img.height,\n        width: img.width,\n        lastModified,\n        name,\n        type,\n        src\n      }\n      resolve(imgMeta)\n    }\n\n    img.src = url\n  })\n}\n\nexport async function importImageFile(db: StickeryDB, file: File) {\n  const src = createImageSrcUrl(file.name)\n  const imageMeta = await getImageFileMeta(file, src)\n  const imageData = await getImageFileData(file, src)\n  return Promise.all([db.imageData.add(imageData), db.imageMeta.add(imageMeta)]).then(() => ({\n    imageData,\n    imageMeta\n  }))\n}\n","import { Reducer, useReducer } from 'react'\nimport { actionCtx } from 'lib/Actions'\nimport { ImageDBState } from '.'\nimport { ImageFileMeta } from 'srv/@types/data'\n\ntype ImageDBReducer = Reducer<ImageDBState, any>\nexport const cmd_int_set_images = actionCtx<ImageDBState['images']>('cmd_int_set_DB_images')\nexport const cmd_int_add_image_meta = actionCtx<ImageFileMeta>('cmd_int_add_image_meta')\n\nconst initState: ImageDBState = {\n  images: []\n}\nconst reducer: ImageDBReducer = (prev, action) => {\n  if (cmd_int_set_images.is(action)) {\n    return {\n      ...prev,\n      images: action.payload\n    }\n  }\n  if (cmd_int_add_image_meta.is(action)) {\n    return {\n      ...prev,\n      images: [action.payload, ...prev.images]\n    }\n  }\n  return prev\n}\n\nexport const useImagesReducer = () => useReducer<ImageDBReducer>(reducer, initState)\n","import React, { ComponentType, CSSProperties, FC } from 'react'\n\nexport enum MainView {\n  Project,\n  NewProject\n}\nexport interface BaseMain<View extends MainView> {\n  view: View\n}\nexport interface ProjectView extends BaseMain<MainView.Project> {\n  ProjectComp: ComponentType\n}\nexport interface NewProjectView extends BaseMain<MainView.NewProject> {\n  NewProjectComp: ComponentType\n}\n\nexport type Main = ProjectView | NewProjectView\nexport const Main: FC<Main> = (props) => {\n  return (\n    <div style={outerStyle}>\n      {props.view === MainView.Project ? (\n        <props.ProjectComp />\n      ) : props.view === MainView.NewProject ? (\n        <props.NewProjectComp />\n      ) : null}\n    </div>\n  )\n}\nconst outerStyle: CSSProperties = {\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  right: 0,\n  overflow: 'hidden'\n}\n","import { commandCtx, useActionCustDispatch } from 'lib/Actions'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport { ImageFileMeta } from 'srv/@types/data'\nimport { useStickeryDB } from '../db'\nimport { importImageFile } from './lib'\nimport { cmd_int_add_image_meta, cmd_int_set_images, useImagesReducer } from './reducer'\n\nexport interface ImageDBState {\n  images: ImageFileMeta[]\n}\n\nexport const cmd_imagedb_import_image_file = commandCtx<File, ImageFileMeta | null>(\n  'cmd_import_image_file',\n  null\n)\n\nexport const useImages = () => {\n  const [state, reduce] = useImagesReducer()\n  const db = useStickeryDB()\n  const addImagesMeta = useActionCustDispatch(cmd_int_add_image_meta, reduce)\n  const dispatch = useCallback(\n    (action) => {\n      cmd_imagedb_import_image_file.consume(action, (file) =>\n        importImageFile(db, file).then(({ imageMeta }) => {\n          addImagesMeta(imageMeta)\n          return imageMeta\n        })\n      )\n\n      reduce(action)\n    },\n    [addImagesMeta, db, reduce]\n  )\n\n  useEffect(() => {\n    db.imageMeta.toArray().then(cmd_int_set_images(dispatch))\n  }, [dispatch, db])\n\n  return useMemo(() => {\n    return {\n      state,\n      dispatch\n    }\n  }, [dispatch, state])\n}\n","import React, { FC, createContext, useContext } from 'react'\nimport { useProjectWorkbench } from 'srv/project'\nimport { useImages } from 'srv/images'\nimport { useServices } from 'lib/hook/useServices'\n\nexport type StickeryServices = ReturnType<typeof useCreateStickeryServices>\nexport const useCreateStickeryServices = () => {\n  return useServices({\n    project: useProjectWorkbench(),\n    imageDB: useImages()\n  })\n}\n\nexport type StickeryServicesCtx = StickeryServices\nexport const StickeryServicesCtx = createContext<StickeryServicesCtx | null>(null)\n\nexport interface ProvideStickeryServices {\n  srvcs: StickeryServices\n}\nexport const ProvideStickeryServices: FC<ProvideStickeryServices> = ({ srvcs, children }) => {\n  return <StickeryServicesCtx.Provider value={srvcs}>{children}</StickeryServicesCtx.Provider>\n}\n\nexport const useStickeryState = () => {\n  const srvcs = useContext(StickeryServicesCtx)\n  if (!srvcs) {\n    throw new Error('no StickeryServicesCtx')\n  }\n  return srvcs.state\n}\n","import { useMemo } from 'react'\nimport { Action } from 'lib/Actions'\nimport { Middleware } from 'lib/Actions/provideDispatcher'\n\nexport type Service<S> = { state: S; dispatch: (_: any) => unknown }\ntype Services = {\n  [T: string]: Service<any>\n}\nexport type StateOf<Srv extends Service<any>> = Srv['state']\nexport type State<Svcs extends Services> = {\n  [K in keyof Svcs]: StateOf<Svcs[K]>\n}\nexport const useServices = <S extends Services>(\n  srvcs: S\n): {\n  state: State<S>\n  dispatch: (_: Action<any>) => unknown\n  mw: Middleware\n} => {\n  return useMemo(() => {\n    const keys = Object.keys(srvcs)\n\n    const dispatch = keys.reduce(\n      (red, key) => (_: any) => {\n        srvcs[key].dispatch(_)\n        red(_)\n      },\n      (_: any) => {}\n    )\n    const state: State<S> = keys.reduce(\n      (red, key) => ({\n        ...red,\n        [key]: srvcs[key].state\n      }),\n      {} as State<S>\n    )\n    const mw: Middleware = (action, _dispatch) => {\n      dispatch(action)\n      return action\n    }\n    return {\n      state,\n      dispatch,\n      mw\n    }\n  }, [srvcs])\n}\n","import React, { FC, CSSProperties } from 'react'\n\nexport type Button = React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>\n\nexport const Button: FC<Button & Button> = (props) => {\n  return <button {...props}>{props.children}</button>\n}\n\nexport const btnStyle: CSSProperties = {\n  float: 'left',\n  backgroundColor: 'gray'\n}\n","import React, { CSSProperties, FC } from 'react'\nimport { Button } from 'ui/elements/button/Button'\nimport { ComponentArray } from '@types'\n\nexport interface Gallery {\n  openFileChooser(): unknown\n  GalleryItems: ComponentArray\n}\nexport const Gallery: FC<Gallery> = ({ GalleryItems, openFileChooser }) => {\n  return (\n    <div style={templateStyle}>\n      <div style={headStyle}>\n        <Button onClick={openFileChooser}>scegli file</Button>\n        <br />\n        <span>o incolla</span>\n      </div>\n      <div style={galleryContainerStyle}>\n        {GalleryItems.map(([key, Item]) => (\n          <Item key={key} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport interface GalleryItem {\n  image: {\n    src: string\n    name: string\n  }\n  clickImage(): unknown\n}\nexport const GalleryItem: FC<GalleryItem> = ({ image, clickImage }) => {\n  return (\n    <div style={imageDivStyle} onClick={clickImage}>\n      <img style={imageStyle} src={image.src} alt={image.name} />\n    </div>\n  )\n}\nconst imageStyle: CSSProperties = {\n  width: '100%'\n}\nconst imageDivStyle: CSSProperties = {\n  maxWidth: '100%',\n  borderColor: 'light-gray',\n  borderWidth: 0.8,\n  padding: '3px',\n  margin: '3px'\n}\nconst templateStyle: CSSProperties = {\n  display: 'grid',\n  gridTemplate: `\n  \"head\" 20px\n  \"gallery\" auto\n  `,\n  position: 'absolute',\n  top: 0,\n  bottom: 0\n}\n\nconst headStyle: CSSProperties = {\n  gridArea: 'head'\n}\n\nconst galleryContainerStyle: CSSProperties = {\n  gridArea: 'gallery',\n  overflowY: 'auto',\n  overflowX: 'hidden'\n}\n","import { ComponentArray } from '@types'\nimport { useActionDispatch } from 'lib/Actions'\nimport { useFileChooser } from 'lib/hook/useFileChooser'\nimport React, { FC, useMemo } from 'react'\nimport { useStickeryState } from 'srv'\nimport { ImageFileMeta } from 'srv/@types/data'\nimport { cmd_imagedb_import_image_file } from 'srv/images'\nimport { Gallery, GalleryItem } from '.'\n\nexport interface GalleryCtrl {\n  clickImage(_: ImageFileMeta): unknown\n}\nexport const GalleryCtrl: FC<GalleryCtrl> = ({ clickImage }) => {\n  const {\n    imageDB: { images }\n  } = useStickeryState()\n  const add = useActionDispatch(cmd_imagedb_import_image_file)\n\n  const [openFileChooser] = useFileChooser({ onFileChoosen: add })\n  const GalleryItems = useMemo<ComponentArray>(\n    () => images.map((image) => [image.src, () => <GalleryItemCtrl {...{ image, clickImage }} />]),\n    [clickImage, images]\n  )\n\n  const props = useMemo<Gallery>(() => {\n    return {\n      openFileChooser,\n      GalleryItems\n    }\n  }, [GalleryItems, openFileChooser])\n  return <Gallery {...props} />\n}\n\nexport interface GalleryItemCTRL {\n  image: ImageFileMeta\n  clickImage(image: ImageFileMeta): unknown\n}\nexport const GalleryItemCtrl: FC<GalleryItemCTRL> = ({ image, clickImage }) => {\n  const props = useMemo<GalleryItem>(() => {\n    return {\n      image,\n      clickImage: () => clickImage(image)\n    }\n  }, [clickImage, image])\n  return <GalleryItem {...props} />\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\nexport interface Opts {\n  onFileChoosen(file: File, by: 'fs' | 'paste' | 'drop'): unknown\n}\n\nexport const useFileChooser = ({ onFileChoosen }: Opts): [() => unknown] => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const openFileChooser = useCallback(() => inputRef.current && inputRef.current.click(), [])\n  useEffect(() => {\n    const input = document.createElement('input')\n    input.setAttribute('type', 'file')\n    input.style.display = 'none'\n    const changeListener = () => {\n      const file = input.files && input.files.length > 0 && input.files[0]\n      if (!file) {\n        return\n      }\n      onFileChoosen(file, 'fs')\n    }\n    input.addEventListener('change', changeListener)\n    document.body.appendChild(input)\n    inputRef.current = input\n    return () => {\n      input.removeEventListener('change', changeListener)\n      document.body.removeChild(input)\n      inputRef.current = null\n    }\n  }, [onFileChoosen])\n\n  useEffect(() => {\n    const pasteListener = (pasteEv: ClipboardEvent) => {\n      const data = pasteEv.clipboardData\n      if (!(data && data.files && data.files.length > 0)) {\n        return\n      }\n      const file = data.files[0]\n      onFileChoosen(file, 'paste')\n    }\n    document.body.addEventListener('paste', pasteListener)\n    return () => {\n      document.body.removeEventListener('paste', pasteListener)\n    }\n  }, [onFileChoosen])\n\n  useEffect(() => {\n    const dropListener = (dragEv: DragEvent) => {\n      const data = dragEv.dataTransfer\n      if (!(data && data.files.length > 0)) {\n        return\n      }\n      const file = data.files[0]\n      onFileChoosen(file, 'drop')\n    }\n    document.body.addEventListener('drop', dropListener)\n    return () => {\n      document.body.removeEventListener('drop', dropListener)\n    }\n  }, [onFileChoosen])\n\n  return [openFileChooser]\n}\n","import React, { ComponentType, FC } from 'react'\nimport { Button } from 'ui/elements/button/Button'\nimport { FormikHook } from '@types'\nimport { useBoolState } from 'lib/hook/useBoolState'\n\nexport interface NewProjectView {\n  GalleryComp: ComponentType<{ done(): unknown }>\n  formik: FormikHook<{ name: string }>\n  background: string | undefined\n}\nexport const NewProjectView: FC<NewProjectView> = ({ GalleryComp, formik, background }) => {\n  const { b: showGallery, T: openGallery, F: closeGallery } = useBoolState()\n  return (\n    <div>\n      <h2>Scegli lo sfondo e il nome</h2>\n      <input name=\"name\" onChange={formik.handleChange} value={formik.values.name} />\n      {background && <img src={background} alt={'bg'} />}\n      {showGallery ? (\n        <GalleryComp done={closeGallery} />\n      ) : (\n        <Button onClick={openGallery}>scegli da gallery</Button>\n      )}\n      {formik.isValid && <Button onClick={formik.submitForm}>ok</Button>}\n      <span>{formik.errors.name}</span>\n    </div>\n  )\n}\n","import { useCallback, useState, useMemo } from 'react'\n\nexport const useBoolState = (initial = false) => {\n  let [state, setState] = useState(initial)\n  const toFalse = useCallback(() => setState(false), [])\n  const toTrue = useCallback(() => setState(true), [])\n  const toggle = useCallback(() => setState(!state), [state])\n  return useMemo(() => ({ b: state, T: toTrue, F: toFalse, t: toggle, s: setState }), [\n    state,\n    toFalse,\n    toTrue,\n    toggle\n  ])\n}\n","import { GalleryCtrl } from 'ui/modules/Gallery/GalleryCtrl'\nimport { useFormik } from 'formik'\nimport React, { FC, useCallback, useMemo, useState } from 'react'\nimport { NewProjectView } from 'ui/Views/NewProject/NewProjectView'\nimport { cmd_prj_new_project } from 'srv/project'\nimport { useActionDispatch } from 'lib/Actions'\nimport { ImageFileMeta } from 'srv/@types/data'\n\nexport interface NewProjectViewCtrl {}\nexport const NewProjectViewCtrl: FC<NewProjectViewCtrl> = () => {\n  const newProject = useActionDispatch(cmd_prj_new_project)\n  const [background, setBg] = useState<ImageFileMeta>()\n  const formik = useFormik({\n    initialValues: {\n      name: ''\n    },\n    onSubmit: ({ name }) => {\n      if (!background) {\n        return\n      }\n      return newProject({\n        background,\n        name\n      }).response\n    }\n  })\n  const GalleryComp = useMemo<NewProjectView['GalleryComp']>(\n    () => ({ done }) => (\n      <Gallery\n        {...{\n          setBackground: (background) => {\n            setBg(background)\n            done()\n          }\n        }}\n      />\n    ),\n    []\n  )\n  const props = useMemo<NewProjectView>(\n    () => ({\n      GalleryComp,\n      formik,\n      background: background?.src\n    }),\n    [GalleryComp, formik, background]\n  )\n  return (\n    <>\n      {`${formik.isSubmitting}`}\n      <NewProjectView {...props} />\n    </>\n  )\n}\nconst Gallery: FC<{ setBackground(_: ImageFileMeta): unknown }> = ({ setBackground }) => {\n  const clickImage = useCallback<GalleryCtrl['clickImage']>((image) => setBackground(image), [\n    setBackground\n  ])\n\n  return <GalleryCtrl {...{ clickImage }} />\n}\n","import Hammer from 'hammerjs'\nimport React, {\n  MutableRefObject,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  createContext,\n  useContext,\n  ComponentType,\n  FC\n} from 'react'\n\nexport type Transform = {\n  scale: Scale\n  pos: Position\n}\n\n//FIXME: ___REMOVE___THIS__SEMAPHORE__\nlet ___REMOVE___THIS__SEMAPHORE__ = false\n\ntype Scale = number\ninterface Position {\n  x: number\n  y: number\n}\ninterface TransformCtx {\n  transform: Transform\n}\nexport const TransformCtx = createContext<TransformCtx>({\n  transform: {\n    pos: { x: 0, y: 0 },\n    scale: 1\n  }\n})\nexport function useTransform(\n  elemRef: MutableRefObject<HTMLElement | null>\n): [Transform, ComponentType] {\n  const parentTranform = useContext(TransformCtx)\n\n  const [scale, setScale] = useState<Scale>(1)\n  const scaleRef = useRef(scale)\n\n  const [pos, setPos] = useState<Position>({ x: 0, y: 0 })\n  const posRef = useRef(pos)\n\n  const [mc, setMc] = useState<HammerManager | null>(null)\n  const { current: transformStyle } = useRef(() => {\n    if (elemRef.current) {\n      elemRef.current.style.transform = `scale(${scaleRef.current}) translate(${posRef.current.x}px,${posRef.current.y}px)`\n    }\n  })\n  useEffect(transformStyle, [])\n  const setup = useRef(false)\n  useEffect(() => {\n    if (!mc || setup.current) {\n      return\n    }\n\n    mc.add(new Hammer.Pinch({ event: 'pinch' }))\n    mc.on('pinchstart', (ev) => {\n      if (___REMOVE___THIS__SEMAPHORE__) {\n        return\n      }\n      ___REMOVE___THIS__SEMAPHORE__ = true\n      const basePos = {\n        x: posRef.current.x * scaleRef.current,\n        y: posRef.current.y * scaleRef.current\n      }\n      const { current: baseSize } = scaleRef\n      const pinch = ({ scale }: HammerInput) => {\n        scaleRef.current = scale * baseSize\n        posRef.current = {\n          x: (basePos.x / scaleRef.current) * parentTranform.transform.scale,\n          y: (basePos.y / scaleRef.current) * parentTranform.transform.scale\n        }\n        transformStyle()\n      }\n      const pinchend = () => {\n        setScale(scaleRef.current)\n        setPos(posRef.current)\n        mc.off('pinchend', pinchend)\n        mc.off('pinch', pinch)\n        setTimeout(() => (___REMOVE___THIS__SEMAPHORE__ = false), 10)\n      }\n      mc.on('pinchend', pinchend)\n      mc.on('pinch', pinch)\n    })\n\n    mc.add(new Hammer.Pan({ event: 'pan', interval: 1000 }))\n    mc.on('panstart', (ev) => {\n      if (___REMOVE___THIS__SEMAPHORE__) {\n        return\n      }\n      ___REMOVE___THIS__SEMAPHORE__ = true\n      const basePos = {\n        x: posRef.current.x, // sizeRef.current,\n        y: posRef.current.y // sizeRef.current\n      }\n      // console.log('panstart')\n      // console.table({ basePos, posRef: posRef.current, sizeRef: sizeRef.current })\n      const pan = ({ deltaX, deltaY }: HammerInput) => {\n        posRef.current = {\n          x: basePos.x + (deltaX / scaleRef.current) * parentTranform.transform.scale,\n          y: basePos.y + (deltaY / scaleRef.current) * parentTranform.transform.scale\n        }\n        // console.log('pan')\n        // console.table({ posRef: posRef.current, delta: { x: deltaX, y: deltaY } })\n        transformStyle()\n      }\n      const panend = () => {\n        mc.off('pan', pan)\n        mc.off('panend', panend)\n        setPos(posRef.current)\n        setTimeout(() => (___REMOVE___THIS__SEMAPHORE__ = false), 10)\n      }\n\n      mc.on('panend', panend)\n      mc.on('pan', pan)\n    })\n\n    setup.current = true\n  }, [mc, parentTranform.transform.scale, transformStyle])\n\n  useEffect(() => {\n    if (!elemRef.current) {\n      return\n    }\n    const _mc = new Hammer.Manager(elemRef.current, { domEvents: true })\n    setMc(_mc)\n    return () => {\n      setup.current = false\n      _mc.destroy()\n    }\n  }, [elemRef])\n\n  return useMemo<[Transform, ComponentType]>(() => {\n    const transform: Transform = {\n      scale,\n      pos\n    }\n    const transformCtx: TransformCtx = {\n      transform: {\n        pos: {\n          x: pos.x + parentTranform.transform.pos.x,\n          y: pos.y + parentTranform.transform.pos.y\n        },\n        scale: scale * parentTranform.transform.scale\n      }\n    }\n    const Provider: FC = ({ children }) => (\n      <TransformCtx.Provider value={transformCtx}>{children}</TransformCtx.Provider>\n    )\n    //console.table(transforms)\n    return [transform, Provider]\n  }, [\n    parentTranform.transform.pos.x,\n    parentTranform.transform.pos.y,\n    parentTranform.transform.scale,\n    pos,\n    scale\n  ])\n}\n","import { useTransform } from 'lib/hook/useTransforms'\nimport React, { CSSProperties, FC, useMemo, useRef } from 'react'\nimport { Dimensions, ImageFileMeta } from 'srv/@types/data'\nimport { ComponentArray } from '@types'\n\nexport interface ProjectView {\n  background: ImageFileMeta\n  Objects: ComponentArray\n}\nexport const ProjectView: FC<ProjectView> = ({ background, Objects }) => {\n  const bgRef = useRef<HTMLImageElement | null>(null)\n  const [, TransformCtx] = useTransform(bgRef)\n  const dimensions = useFitInWindowDim(background)\n  const containerStyle = useMemo<CSSProperties>(\n    () => ({\n      ..._containerStyle,\n      backgroundImage: `url(${background.src})`,\n      width: `${dimensions.width}px`,\n      height: `${dimensions.height}px`\n    }),\n    [background, dimensions]\n  )\n  return (\n    <TransformCtx>\n      <div ref={bgRef} style={containerStyle}>\n        {Objects.map(([key, Obj]) => (\n          <Obj key={key} />\n        ))}\n      </div>\n    </TransformCtx>\n  )\n}\n\nconst _containerStyle: CSSProperties = {\n  // border: '5px solid yellow',\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'contain',\n  margin: 'auto',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  right: 0,\n  overflow: 'hidden'\n}\n\nexport const useFitInWindowDim = (dim: Dimensions, scale = 1) =>\n  useMemo(() => fitInWindowDim(dim, scale), [dim, scale])\n\nexport function fitInWindowDim(dim: Dimensions, scale = 1): Dimensions {\n  const clientDim: Dimensions = {\n    height: window.innerHeight,\n    width: window.innerWidth\n  }\n\n  const ratio = fitRatio(dim, clientDim)\n  const result: Dimensions = {\n    height: dim.height * ratio * scale,\n    width: dim.width * ratio * scale\n  }\n  console.table({ ratio, clientDim, dim, result })\n  return result\n}\n\nexport const fitRatio = (dim: Dimensions, targetDim: Dimensions) =>\n  Math.min(targetDim.height / dim.height, targetDim.width / dim.width)\n","import { useTransform } from 'lib/hook/useTransforms'\nimport React, { CSSProperties, FC, useMemo, useRef } from 'react'\nimport { useStickeryState } from 'srv'\nimport { ProjectObject } from 'srv/@types/data'\nimport { ProjectView } from '.'\nimport { useFitInWindowDim } from './ProjectView'\n\nexport interface ProjectViewCtrl {}\nexport const ProjectViewCtrl: FC<ProjectViewCtrl> = () => {\n  const { project } = useStickeryState()\n  const props = useMemo<ProjectView | null>(() => {\n    if (!project) {\n      return null\n    }\n    const Objects: ProjectView['Objects'] = project.objects.map((obj) => [\n      obj.image.src,\n      () => PrjObj({ obj })\n    ])\n    const props: ProjectView = {\n      background: project.background,\n      Objects\n    }\n    return props\n  }, [project])\n  return props && <ProjectView {...props} />\n}\n\nconst PrjObj: FC<{ obj: ProjectObject }> = ({ obj }) => {\n  const objRef = useRef<HTMLImageElement | null>(null)\n  useTransform(objRef)\n  const fitDim = useFitInWindowDim(obj.image, 0.25)\n  const style = useMemo<CSSProperties>(\n    () => ({\n      ...fitDim\n    }),\n    [fitDim]\n  )\n\n  return <img ref={objRef} alt={obj.image.name} src={obj.image.src} style={style} />\n}\n","import { NewProjectViewCtrl } from 'ui/Views/NewProject/NewProjectViewCtrl'\nimport React, { FC, useMemo } from 'react'\nimport { Main, MainView } from '.'\nimport { useStickeryState } from 'srv'\nimport { ProjectViewCtrl } from 'ui/Views/Project/ProjectViewCtrl'\n\nexport interface MainCtrl {}\nexport const MainCtrl: FC<MainCtrl> = () => {\n  const { project } = useStickeryState()\n  const props = useMemo<Main>(() => {\n    if (project) {\n      return {\n        ProjectComp: () => <ProjectViewCtrl />,\n        view: MainView.Project\n      }\n    } else {\n      return {\n        NewProjectComp: () => <NewProjectViewCtrl />,\n        view: MainView.NewProject\n      }\n    }\n  }, [project])\n  return <Main {...props} />\n}\n","import { MainCtrl } from 'ui/templates/Main/MainCtrl'\nimport { ProvideMiddleware } from 'lib/Actions/provideDispatcher'\nimport React, { FC } from 'react'\nimport ReactDOM from 'react-dom'\nimport { ProvideStickeryServices, useCreateStickeryServices } from 'srv'\nimport './index.css'\n// import { defineCustomElements } from '@ionic/pwa-elements/loader'\n// import * as serviceWorker from './serviceWorker'\n\nconst Main: FC = () => {\n  const srvcs = useCreateStickeryServices()\n\n  return (\n    <ProvideMiddleware mw={srvcs.mw}>\n      <ProvideStickeryServices srvcs={srvcs}>\n        <MainCtrl />\n      </ProvideStickeryServices>\n    </ProvideMiddleware>\n  )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))\n\n// defineCustomElements(window)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n//serviceWorker.register()\nnavigator.serviceWorker.register('sw.js')\n"],"sourceRoot":""}