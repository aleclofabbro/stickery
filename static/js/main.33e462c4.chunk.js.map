{"version":3,"sources":["lib/utils.ts","ui/templates/Main.tsx","ui/elements/basic/Button.tsx","ui/elements/top-bar/Button.tsx","ui/modules/Modal/Modal.tsx","ui/modules/top-bar/SetBgButton.tsx","state/project/reducer.ts","state/project/index.tsx","hoc/modules/top-bar/SetBgButtonHoc.tsx","hook/useBoolState.ts","hook/fileChooser.tsx","srv/importImage.ts","hoc/canvas/MainCanvasHoc.tsx","index.tsx","ctx/globs.tsx","hoc/App.tsx"],"names":["k","MainTpl","Canvas","TopBar","style","outerStyle","topBarStyle","canvasStyle","position","left","top","right","bottom","backgroundColor","Button","onClick","children","TopBarButton","btnStyle","float","Modal","onClickOut","ref","useRef","useEffect","current","div","parent","parentElement","document","body","appendChild","bgClick","useCallback","ev","target","currentTarget","id","bgStyle","modalStyle","SetBgButton","closeModal","isModalOpen","openModal","importFile","reducer","prev","action","next","_reducer","console","log","t","setBackground","p","state","v","initialState","background","ProjectStateCtx","createContext","useProjectState","useContext","ProvideProjectState","useReducer","value","dispatch","Provider","SetBgButtonHoc","initial","useState","setState","toFalse","toTrue","toggle","useBoolState","fileChoosen","inputRef","chooseFile","click","input","createElement","setAttribute","display","changeListener","file","files","length","addEventListener","removeEventListener","removeChild","pasteListener","pasteEv","data","clipboardData","dropListener","dragEv","dataTransfer","useFileChooser","a","async","objUrl","URL","createObjectURL","importImage","then","url","MainCanvasHoc","fabricCanvasRef","fabric","canvasOpts","redrawCanvas","canvas","setHeight","window","innerHeight","setWidth","innerWidth","bg","setBackgroundImage","Image","fromURL","img","zoom","Math","min","getHeight","height","getWidth","width","setZoom","renderAll","mainCanvasStyle","interactive","ReactDOM","render","mainProps","useMemo","getElementById","navigator","serviceWorker","register"],"mappings":"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","file":"static/js/main.33e462c4.chunk.js","sourcesContent":["export type Setter<S, K extends keyof S> = (key: K) => (state: S, v: S[K]) => S\nexport const setter = <S, K extends keyof S>(k: K) => (state: S, v: S[K]): S => ({\n  ...state,\n  [k]: v\n})\n","import React, { CSSProperties, SFC } from 'react'\n\nexport interface MainTpl {\n  TopBar: JSX.Element\n  Canvas: JSX.Element\n}\nexport const MainTpl: SFC<MainTpl> = ({ Canvas, TopBar }) => {\n  return (\n    <div style={outerStyle}>\n      <div style={topBarStyle}>{TopBar}</div>\n      <div style={canvasStyle}>{Canvas}</div>\n    </div>\n  )\n}\nconst outerStyle: CSSProperties = {\n  position: 'fixed',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0\n}\nconst topBarStyle: CSSProperties = {\n  position: 'fixed',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: '95%',\n  backgroundColor: '#262626'\n}\nconst canvasStyle: CSSProperties = {\n  position: 'fixed',\n  left: 0,\n  top: '5%',\n  right: 0,\n  bottom: 0,\n  backgroundColor: '#1a1a1a'\n}\n","import React, { SFC, CSSProperties } from 'react'\n\nexport interface Button {\n  onClick(): unknown\n  style?: CSSProperties\n}\n\nexport const Button: SFC<Button> = ({ onClick, style, children }) => {\n  return (\n    <button onClick={onClick} style={style}>\n      {children}\n    </button>\n  )\n}\n","import React, { SFC, CSSProperties } from 'react'\nimport { Button } from '../basic/Button'\n\nexport interface TopBarButton {\n  onClick(): unknown\n}\nexport const TopBarButton: SFC<TopBarButton> = ({ onClick, children }) => {\n  return (\n    <Button style={btnStyle} onClick={onClick}>\n      {children}\n    </Button>\n  )\n}\nconst btnStyle: CSSProperties = {\n  float: 'left',\n  backgroundColor: 'gray'\n}\n","import React, { CSSProperties, SFC, useRef, useEffect, useCallback } from 'react'\n\nexport interface Modal {\n  onClickOut(): unknown\n}\nexport const Modal: SFC<Modal> = ({ onClickOut, children }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    if (ref.current) {\n      const div = ref.current\n      const parent = ref.current.parentElement\n      document.body.appendChild(div)\n      return () => {\n        parent && parent.appendChild(div)\n      }\n    }\n  }, [])\n  const bgClick = useCallback(\n    (ev: React.MouseEvent<HTMLDivElement>) => {\n      if (ev.target !== ev.currentTarget) {\n        return\n      } else {\n        onClickOut()\n      }\n    },\n    [onClickOut]\n  )\n  return (\n    <div id=\"modal\" ref={ref} style={bgStyle} onClick={bgClick}>\n      <div style={modalStyle}>{children}</div>\n    </div>\n  )\n}\nconst modalStyle: CSSProperties = {\n  position: 'fixed',\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  backgroundColor: '#1a1a1a'\n}\nconst bgStyle: CSSProperties = {\n  position: 'fixed',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n}\n","import React, { SFC } from 'react'\nimport { TopBarButton } from '../../elements/top-bar/Button'\nimport { Modal } from '../Modal/Modal'\nimport { Button } from '../../elements/basic/Button'\n\nexport interface SetBgButton {\n  isModalOpen: boolean\n  openModal(): unknown\n  closeModal(): unknown\n  importFile(): unknown\n}\n\nexport const SetBgButton: SFC<SetBgButton> = ({\n  closeModal,\n  isModalOpen,\n  openModal,\n  importFile\n}) => {\n  return (\n    <>\n      <TopBarButton onClick={openModal}>Sfondo</TopBarButton>\n      {isModalOpen && (\n        <Modal onClickOut={closeModal}>\n          <Button onClick={importFile}>scegli file</Button>\n          <br />\n          <span>o incolla</span>\n        </Modal>\n      )}\n    </>\n  )\n}\n","import { PrjReducer, ProjectState } from './types'\nimport { setter } from '../../lib/utils'\ntype S = ProjectState\n\nexport const reducer: PrjReducer = (prev, action) => {\n  const next = _reducer(prev, action)\n  console.log(next)\n  return next\n}\nconst _reducer: PrjReducer = (prev, action) => {\n  switch (action.t) {\n    case 'bg': {\n      return setBackground(prev, action.p)\n    }\n  }\n  return prev\n}\n\nexport const setBackground = setter<S, 'background'>('background')\n","import React, { useReducer, createContext, SFC, useContext } from 'react'\nimport { PrjReducer, ProjectState, Actions } from './types'\nimport { reducer } from './reducer'\n\nconst initialState: ProjectState = {\n  background: null\n}\nexport type ProjectStateCtx = { state: ProjectState; dispatch: React.Dispatch<Actions> }\nexport const ProjectStateCtx = createContext<ProjectStateCtx>({} as ProjectStateCtx)\nexport const useProjectState = () => useContext(ProjectStateCtx)\n\nexport interface Provide {}\nexport const ProvideProjectState: SFC<Provide> = ({ children }) => {\n  const [state, dispatch] = useReducer<PrjReducer>(reducer, initialState)\n  const value = { state, dispatch }\n  return <ProjectStateCtx.Provider value={value}>{children}</ProjectStateCtx.Provider>\n}\n","import React, { SFC, useCallback } from 'react'\nimport { useFileChooser } from '../../../hook/fileChooser'\nimport { useBoolState } from '../../../hook/useBoolState'\nimport { SetBgButton } from '../../../ui/modules/top-bar/SetBgButton'\nimport { importImage } from '../../../srv/importImage'\nimport { useProjectState } from '../../../state/project'\n\nexport const SetBgButtonHoc: SFC = () => {\n  const [isModalOpen, openModal, closeModal] = useBoolState(false)\n  const { dispatch } = useProjectState()\n  const getBgFile = useCallback(\n    (file: File) => {\n      importImage(file).then((url) => dispatch({ t: 'bg', p: url }))\n    },\n    [dispatch]\n  )\n  const [importFile] = useFileChooser({ fileChoosen: getBgFile })\n  return (\n    <SetBgButton\n      importFile={importFile}\n      closeModal={closeModal}\n      isModalOpen={isModalOpen}\n      openModal={openModal}\n    />\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport const useBoolState = (\n  initial: boolean\n): [boolean, () => unknown, () => unknown, () => unknown, (state: boolean) => unknown] => {\n  let [state, setState] = useState(false)\n  const toFalse = useCallback(() => setState(false), [])\n  const toTrue = useCallback(() => setState(true), [])\n  const toggle = useCallback(() => setState(!state), [state])\n  return [state, toTrue, toFalse, toggle, setState]\n}\n","import { useCallback, useEffect, useRef } from 'react'\n\nexport interface Opts {\n  fileChoosen(file: File, by: 'fs' | 'paste' | 'drop'): unknown\n}\n\nexport const useFileChooser = ({ fileChoosen }: Opts): [() => unknown] => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const chooseFile = useCallback(() => inputRef.current && inputRef.current.click(), [])\n  useEffect(() => {\n    const input = document.createElement('input')\n    input.setAttribute('type', 'file')\n    input.style.display = 'none'\n    const changeListener = () => {\n      const file = input.files && input.files.length > 0 && input.files[0]\n      if (!file) {\n        return\n      }\n      fileChoosen(file, 'fs')\n    }\n    input.addEventListener('change', changeListener)\n    document.body.appendChild(input)\n    inputRef.current = input\n    return () => {\n      input.removeEventListener('change', changeListener)\n      document.body.removeChild(input)\n      inputRef.current = null\n    }\n  }, [fileChoosen])\n\n  useEffect(() => {\n    const pasteListener = (pasteEv: ClipboardEvent) => {\n      const data = pasteEv.clipboardData\n      if (!(data && data.files && data.files.length > 0)) {\n        return\n      }\n      const file = data.files[0]\n      fileChoosen(file, 'paste')\n    }\n    document.body.addEventListener('paste', pasteListener)\n    return () => {\n      document.body.removeEventListener('paste', pasteListener)\n    }\n  }, [fileChoosen])\n\n  useEffect(() => {\n    const dropListener = (dragEv: DragEvent) => {\n      const data = dragEv.dataTransfer\n      if (!(data && data.files.length > 0)) {\n        return\n      }\n      const file = data.files[0]\n      fileChoosen(file, 'paste')\n    }\n    document.body.addEventListener('drop', dropListener)\n    return () => {\n      document.body.removeEventListener('drop', dropListener)\n    }\n  }, [fileChoosen])\n\n  return [chooseFile]\n}\n","export const importImage = async (file: File): Promise<string> => {\n  const objUrl = URL.createObjectURL(file)\n  return objUrl\n}\n","import { fabric } from 'fabric'\nimport React, { SFC, useEffect, useRef, CSSProperties, useCallback } from 'react'\nimport { useProjectState } from '../../state/project'\nimport { ICanvasOptions } from 'fabric/fabric-impl'\nexport const MainCanvasHoc: SFC = () => {\n  const ref = useRef<HTMLCanvasElement>(null)\n  const fabricCanvasRef = useRef<fabric.Canvas>()\n\n  const { state } = useProjectState()\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    fabricCanvasRef.current = new fabric.Canvas(ref.current, canvasOpts)\n  }, [])\n\n  const redrawCanvas = useCallback(() => {\n    const canvas = fabricCanvasRef.current\n    if (!canvas) {\n      return\n    }\n    canvas.setHeight(window.innerHeight)\n    canvas.setWidth(window.innerWidth)\n    if (state.background) {\n      const bg = state.background\n      canvas.setBackgroundImage(bg, () => {\n        fabric.Image.fromURL(bg, (img) => {\n          const zoom = Math.min(\n            canvas.getHeight() / (img.height || 1),\n            canvas.getWidth() / (img.width || 1)\n          )\n          canvas.setZoom(zoom)\n          canvas.renderAll()\n        })\n      })\n    } else {\n      canvas.renderAll()\n    }\n  }, [state.background])\n\n  useEffect(redrawCanvas, [state.background, redrawCanvas])\n\n  useEffect(() => {\n    // resize on init\n    window.addEventListener('resize', redrawCanvas, false)\n    return () => {\n      window.removeEventListener('resize', redrawCanvas, false)\n    }\n  }, [redrawCanvas])\n\n  return <canvas style={mainCanvasStyle} ref={ref}></canvas>\n}\n\nconst mainCanvasStyle: CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0\n}\n\nconst canvasOpts: ICanvasOptions = {\n  interactive: true\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './hoc/App'\nimport { GlobCtx } from './ctx/globs'\n// import { defineCustomElements } from '@ionic/pwa-elements/loader'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <GlobCtx>\n    <App />\n  </GlobCtx>,\n  document.getElementById('root')\n)\n\n// defineCustomElements(window)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n//serviceWorker.register()\nnavigator.serviceWorker.register('sw.js')\n","import React, { SFC } from 'react'\nimport { ProvideProjectState } from '../state/project'\n\nexport const GlobCtx: SFC = ({ children }) => {\n  return <ProvideProjectState>{children}</ProvideProjectState>\n}\n","import React, { SFC, useMemo } from 'react'\nimport { MainTpl } from '../ui/templates/Main'\nimport { SetBgButtonHoc } from './modules/top-bar/SetBgButtonHoc'\nimport { MainCanvasHoc } from './canvas/MainCanvasHoc'\n\nexport const App: SFC = () => {\n  const mainProps = useMemo<MainTpl>(() => {\n    return {\n      TopBar: (\n        <>\n          <SetBgButtonHoc />\n        </>\n      ),\n      Canvas: <MainCanvasHoc />\n    }\n  }, [])\n\n  return <MainTpl {...mainProps}></MainTpl>\n}\n"],"sourceRoot":""}